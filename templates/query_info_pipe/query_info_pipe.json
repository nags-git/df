{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"capita_hcpdata_db": {
			"type": "string"
		},
		"azure_blob_csv_ls": {
			"type": "string"
		},
		"hcpapiconnect": {
			"type": "string"
		},
		"azure_pipeline_metadata_update_ls": {
			"type": "string"
		},
		"capita_hcpcosmos_db": {
			"type": "string"
		},
		"hcp_data_download_http_ls": {
			"type": "string"
		},
		"azure_data_upload_avro_stage_ls": {
			"type": "string"
		},
		"azure_data_upload_ls": {
			"type": "string"
		},
		"azure_data_upload_avro_stage_metadata_ls": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/query_info_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy from CSV to DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "IngestStartDateTime",
											"type": "String"
										},
										"sink": {
											"name": "IngestStartDateTime"
										}
									},
									{
										"source": {
											"name": "IngestEndDateTime",
											"type": "String"
										},
										"sink": {
											"name": "IngestEndDateTime"
										}
									},
									{
										"source": {
											"name": "NameSpace",
											"type": "String"
										},
										"sink": {
											"name": "Namespace"
										}
									},
									{
										"source": {
											"name": "CountOfRecordsToBeProcessedAtOnce",
											"type": "String"
										},
										"sink": {
											"name": "RecordsCount"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "csvforquery",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "hcp_query_param_data",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Get_Query_Info",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy from CSV to DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_Get_QueryData_By_Status]",
								"storedProcedureParameters": {
									"status": {
										"type": "String",
										"value": "Initial"
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "hcp_query_param_data",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachQuery",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_Query_Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Query_Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "hcpapi_sql_pipe",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "update_query_status_InProgress",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "hcpapi_sql_pipe",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "update_query_status_InProgress",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_Update_QueryData_Status]",
										"storedProcedureParameters": {
											"id": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"status": {
												"value": "InProcess",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "update_query_status_processed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "hcpapi_sql_pipe",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_Update_QueryData_Status]",
										"storedProcedureParameters": {
											"id": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"status": {
												"value": "processed",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "update_query_status_failed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "hcpapi_sql_pipe",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_Update_QueryData_Status]",
										"storedProcedureParameters": {
											"id": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"status": {
												"value": "failed",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvforquery')]",
				"[concat(variables('factoryId'), '/datasets/hcp_query_param_data')]",
				"[concat(variables('factoryId'), '/pipelines/hcpapi_sql_pipe')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvforquery')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('azure_blob_csv_ls')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "samplequerydata.csv",
						"folderPath": "inputquery",
						"container": "hcpstage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hcp_query_param_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('capita_hcpdata_db')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "uniqueidentifier"
					},
					{
						"name": "IngestStartDateTime",
						"type": "nvarchar"
					},
					{
						"name": "IngestEndDateTime",
						"type": "nvarchar"
					},
					{
						"name": "Namespace",
						"type": "nvarchar"
					},
					{
						"name": "RecordsCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblhcp_queries_to_process"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hcpapi_sql_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copy the data from api to sql",
				"activities": [
					{
						"name": "copy_hcpapidata_to_sql",
						"description": "copies the data from api to sql.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get_Query_to_Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "BatchID",
										"value": {
											"value": "@activity('Get_Query_to_Process').output.firstRow.id",
											"type": "Expression"
										}
									},
									{
										"name": "Status",
										"value": "Initial"
									},
									{
										"name": "RetryCount",
										"value": "0"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "@{concat('<queryRequest><object><query>namespace:',activity('Get_Query_to_Process').output.firstRow.namespace,' +ingestTimeString:[',activity('Get_Query_to_Process').output.firstRow.ingestStartDateTime,' TO ',activity('Get_Query_to_Process').output.firstRow.ingestEndDateTime,']</query><verbose>true</verbose></object></queryRequest>')}",
									"type": "Expression"
								},
								"additionalHeaders": {
									"Authorization": "HCP ZGF0YWFjY2Vzc3VzZXIwMQ==:2b1130feb9e66aed8403dea732c16492",
									"Content-Type": "application/xml"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['urlName']"
										},
										"sink": {
											"name": "UrlName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['operation']"
										},
										"sink": {
											"name": "Operation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['version']"
										},
										"sink": {
											"name": "Version",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['objectPath']"
										},
										"sink": {
											"name": "ObjectPath"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "Type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['size']"
										},
										"sink": {
											"name": "Size",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['retention']"
										},
										"sink": {
											"name": "Retention",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hold']"
										},
										"sink": {
											"name": "Hold",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['shred']"
										},
										"sink": {
											"name": "Shred",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['owner']"
										},
										"sink": {
											"name": "Owner",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ingestTime']"
										},
										"sink": {
											"name": "IngestTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['customMetadata']"
										},
										"sink": {
											"name": "CustomMetadataExists",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['index']"
										},
										"sink": {
											"name": "Index",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hash']"
										},
										"sink": {
											"name": "Hash",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['updateTime']"
										},
										"sink": {
											"name": "UpdateTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['namespace']"
										},
										"sink": {
											"name": "Namespace",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['customMetadataAnnotation']"
										},
										"sink": {
											"name": "CustomMetadataAnnotation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['BatchID']"
										},
										"sink": {
											"name": "BatchID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Status']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RetryCount']"
										},
										"sink": {
											"name": "RetryCount",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['queryResult']['resultSet']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "hcp_api_ds",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "hcp_data_sql_ds",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Get_Query_to_Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_Get_QueryData_By_Status]",
								"storedProcedureParameters": {
									"status": {
										"type": "String",
										"value": "InProcess"
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "hcp_data_sql_ds",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ProcessRecords",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "copy_hcpapidata_to_sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(activity('update_status_and_get_recordscount').output.firstRow.recordsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "update_status_and_get_recordscount",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[USP_Update_StatusToReady]",
											"storedProcedureParameters": {
												"count": {
													"type": "Int32",
													"value": {
														"value": "@activity('Get_Query_to_Process').output.firstRow.recordsCount",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "hcp_data_sql_ds",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "check_if_rowsExists_to_process",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "update_status_and_get_recordscount",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('update_status_and_get_recordscount').output.firstRow.recordsCount,0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "process_data_pipe",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "process_data_pipe",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/hcp_api_ds')]",
				"[concat(variables('factoryId'), '/datasets/hcp_data_sql_ds')]",
				"[concat(variables('factoryId'), '/pipelines/process_data_pipe')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hcp_api_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('hcpapiconnect')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hcp_data_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('capita_hcpdata_db')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BatchId",
						"type": "nvarchar"
					},
					{
						"name": "ObjectPath",
						"type": "nvarchar"
					},
					{
						"name": "HCPSHA",
						"type": "nvarchar"
					},
					{
						"name": "SHA",
						"type": "nvarchar"
					},
					{
						"name": "JsonData",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblhcpdata"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/process_data_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "for_each_object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_objects_to_process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_objects_to_process').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "upload_data_hcp_to_stage_azure",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AvroSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": "Authorization: HCP YWRtaW4=:79ccb574b8b45414a34cb69d17b03040",
												"requestTimeout": ""
											}
										},
										"sink": {
											"type": "AvroSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "AvroWriteSettings",
												"quoteAllText": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "hcp_data_download_avro_ds",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().ObjectPath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azure_data_upload_avro_stage_ds",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().ObjectPath",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "upload_data_stage_to_main_azure",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "usp_update_status_for_hcp_stage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AvroSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											}
										},
										"sink": {
											"type": "AvroSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "AvroWriteSettings",
												"quoteAllText": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "azure_data_upload_avro_stage_ds",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().ObjectPath",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azure_data_upload_avro_ds",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().ObjectPath",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "delete_stage_object_Azure",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "usp_update_status_for_stage_main_azure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "azure_data_upload_avro_stage_ds",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().ObjectPath",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "check_if_custommetada_exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "usp_update_status_for_delete_stage_objects",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().CustomMetadataExists,'True'))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "usp_update_error_save_status",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "update_metadata_for_false_condition",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[USP_Update_FailedObjectStatus]",
													"storedProcedureParameters": {
														"error": {
															"value": {
																"value": "@activity('update_metadata_for_false_condition').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"errorAtStage": {
															"value": "update process to cosmos - false condition",
															"type": "String"
														},
														"id": {
															"value": {
																"value": "@item().id",
																"type": "Expression"
															},
															"type": "Guid"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('capita_hcpdata_db')]",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "update_metadata_for_false_condition",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "fill_metadata_for_false_condition",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[USP_Update_Metadata]",
													"storedProcedureParameters": {
														"azureHash": {
															"value": {
																"value": "@activity('fill_metadata_for_false_condition').output.shA256",
																"type": "Expression"
															},
															"type": "String"
														},
														"customMetadata": {
															"value": {
																"value": "@activity('fill_metadata_for_false_condition').output.customMetadata",
																"type": "Expression"
															},
															"type": "String"
														},
														"eTag": {
															"value": {
																"value": "@activity('fill_metadata_for_false_condition').output.eTag",
																"type": "Expression"
															},
															"type": "String"
														},
														"id": {
															"value": {
																"value": "@item().id",
																"type": "Expression"
															},
															"type": "Guid"
														},
														"MD5": {
															"value": {
																"value": "@activity('fill_metadata_for_false_condition').output.contentMD5",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('capita_hcpdata_db')]",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "usp_update_error_fill_metadata",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "fill_metadata_for_false_condition",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[USP_Update_FailedObjectStatus]",
													"storedProcedureParameters": {
														"error": {
															"value": {
																"value": "@activity('fill_metadata_for_false_condition').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"errorAtStage": {
															"value": "fill metadata ",
															"type": "String"
														},
														"id": {
															"value": {
																"value": "@item().id",
																"type": "Expression"
															},
															"type": "Guid"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('capita_hcpdata_db')]",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "fill_metadata_for_false_condition",
												"type": "AzureFunctionActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"functionName": "hcpmetadataupdate",
													"method": "POST",
													"headers": {
														"Content-Type": "application/json"
													},
													"body": {
														"value": "@concat('{\n\"filepath\": \"evidential/',item().ObjectPath,'\",\n\"customMetadataExists\":\"false\"\n}')",
														"type": "Expression"
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('azure_pipeline_metadata_update_ls')]",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "usp_update_error_hcp_metadata",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "upload_data_hcp_metadata_to_stage_azure",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[USP_Update_FailedObjectStatus]",
													"storedProcedureParameters": {
														"error": {
															"value": {
																"value": "@activity('upload_data_hcp_metadata_to_stage_azure').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"errorAtStage": {
															"value": "upload metadata to hcp error",
															"type": "String"
														},
														"id": {
															"value": {
																"value": "@item().id",
																"type": "Expression"
															},
															"type": "Guid"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('capita_hcpdata_db')]",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "fill_metadata_for_true_condition",
												"type": "AzureFunctionActivity",
												"dependsOn": [
													{
														"activity": "upload_data_hcp_metadata_to_stage_azure",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"functionName": "hcpmetadataupdate",
													"method": "POST",
													"headers": {
														"Content-Type": "application/json"
													},
													"body": {
														"value": "@concat('{\n\"filepath\": \"evidential/',item().ObjectPath,'\",\n\"customMetadataExists\":\"True\"\n}')",
														"type": "Expression"
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('azure_pipeline_metadata_update_ls')]",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "update_metadata_for_true_condition",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "fill_metadata_for_true_condition",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[USP_Update_Metadata]",
													"storedProcedureParameters": {
														"azureHash": {
															"value": {
																"value": "@activity('fill_metadata_for_true_condition').output.shA256",
																"type": "Expression"
															},
															"type": "String"
														},
														"customMetadata": {
															"value": {
																"value": "@activity('fill_metadata_for_true_condition').output.customMetadata",
																"type": "Expression"
															},
															"type": "String"
														},
														"eTag": {
															"value": {
																"value": "@activity('fill_metadata_for_true_condition').output.eTag",
																"type": "Expression"
															},
															"type": "String"
														},
														"id": {
															"value": {
																"value": "@item().id",
																"type": "Expression"
															},
															"type": "Guid"
														},
														"MD5": {
															"value": {
																"value": "@activity('fill_metadata_for_true_condition').output.contentMD5",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('capita_hcpdata_db')]",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "upload_data_hcp_metadata_to_stage_azure",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AvroSource",
														"storeSettings": {
															"type": "HttpReadSettings",
															"requestMethod": "GET",
															"additionalHeaders": "Authorization: HCP YWRtaW4=:79ccb574b8b45414a34cb69d17b03040",
															"requestTimeout": ""
														}
													},
													"sink": {
														"type": "AvroSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "AvroWriteSettings",
															"quoteAllText": true
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "hcp_data_download_avro_ds",
														"type": "DatasetReference",
														"parameters": {
															"relativeURL": {
																"value": "@concat(item().ObjectPath,'?type=custom-metadata&annotation=',item().CustomMetadataAnnotation)",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "azure_data_upload_avro_stage_metadata_ds",
														"type": "DatasetReference",
														"parameters": {
															"relativePath": {
																"value": "@concat('metadata/',item().ObjectPath,'.txt')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "usp_update_error_fill_metadata_true",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "fill_metadata_for_true_condition",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[USP_Update_FailedObjectStatus]",
													"storedProcedureParameters": {
														"error": {
															"value": {
																"value": "@activity('fill_metadata_for_true_condition').error.message",
																"type": "Expression"
															},
															"type": "String"
														},
														"errorAtStage": {
															"value": "fill_metadata_true_condition",
															"type": "String"
														},
														"id": {
															"value": {
																"value": "@item().id",
																"type": "Expression"
															},
															"type": "Guid"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('capita_hcpdata_db')]",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "usp_update_error_at_hcp_to_stage_storage",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "upload_data_hcp_to_stage_azure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_Update_FailedObjectStatus]",
										"storedProcedureParameters": {
											"error": {
												"value": {
													"value": "@activity('upload_data_hcp_to_stage_azure').error.message",
													"type": "Expression"
												},
												"type": "String"
											},
											"errorAtStage": {
												"value": "Upload Object from HCP to Stage",
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Guid"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "usp_update_error_at_stage_to_main_storage_copy",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "upload_data_stage_to_main_azure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_Update_FailedObjectStatus]",
										"storedProcedureParameters": {
											"error": {
												"value": {
													"value": "@activity('upload_data_stage_to_main_azure').error.message",
													"type": "Expression"
												},
												"type": "String"
											},
											"errorAtStage": {
												"value": "Upload Object from Stage to Main",
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Guid"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "usp_update_error_at_delete_object",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "delete_stage_object_Azure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[USP_Update_FailedObjectStatus]",
										"storedProcedureParameters": {
											"error": {
												"value": {
													"value": "@activity('delete_stage_object_Azure').error.message",
													"type": "Expression"
												},
												"type": "String"
											},
											"errorAtStage": {
												"value": "Delete Object from Stage",
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Guid"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "usp_update_status_for_hcp_stage",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "upload_data_hcp_to_stage_azure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[USP_Update_Status_Of_Execution]",
										"storedProcedureParameters": {
											"id": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"status": {
												"value": "ObjectIsStaged",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "usp_update_status_for_stage_main_azure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "upload_data_stage_to_main_azure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[USP_Update_Status_Of_Execution]",
										"storedProcedureParameters": {
											"id": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"status": {
												"value": "ObjectIsInContainer",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "usp_update_status_for_delete_stage_objects",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "delete_stage_object_Azure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[USP_Update_Status_Of_Execution]",
										"storedProcedureParameters": {
											"id": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"status": {
												"value": "ObjectInStageIsDeleted",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('capita_hcpdata_db')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "get_objects_to_process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_Get_HCPObjectsToProcess]",
								"queryTimeout": "23:20:00"
							},
							"dataset": {
								"referenceName": "hcp_data_sql_ds",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy_sql_cosmos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "for_each_object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_Get_ObjectsToBeProcessedForCosmos]",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Application",
											"type": "String"
										},
										"sink": {
											"path": "$['application']"
										}
									},
									{
										"source": {
											"name": "FilePath",
											"type": "String"
										},
										"sink": {
											"path": "$['FilePath']"
										}
									},
									{
										"source": {
											"name": "SnapshotPath",
											"type": "String"
										},
										"sink": {
											"path": "$['SnapshotPath']"
										}
									},
									{
										"source": {
											"name": "IsSnapshot",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['IsSnapshot']"
										}
									},
									{
										"source": {
											"name": "Version",
											"type": "Int64"
										},
										"sink": {
											"path": "$['Version']"
										}
									},
									{
										"source": {
											"name": "Hold",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['System']['Hold']"
										}
									},
									{
										"source": {
											"name": "Index",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['System']['Index']"
										}
									},
									{
										"source": {
											"name": "Shred",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['System']['Shred']"
										}
									},
									{
										"source": {
											"name": "Retention",
											"type": "Int64"
										},
										"sink": {
											"path": "$['System']['Retention']"
										}
									},
									{
										"source": {
											"name": "CustomMetadata",
											"type": "String"
										},
										"sink": {
											"path": "$['CustomMetadata']"
										}
									},
									{
										"source": {
											"name": "DocumentSize",
											"type": "Int32"
										},
										"sink": {
											"path": "$['DocumentSize']"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"path": "$['Status']"
										}
									},
									{
										"source": {
											"name": "QueueRequestType",
											"type": "String"
										},
										"sink": {
											"path": "$['QueueRequestType']"
										}
									},
									{
										"source": {
											"name": "ContentMD5",
											"type": "String"
										},
										"sink": {
											"path": "$['ContentMD5']"
										}
									},
									{
										"source": {
											"name": "LeaseId",
											"type": "String"
										},
										"sink": {
											"path": "$['LeaseId']"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "Int32"
										},
										"sink": {
											"path": "$['CreatedDate']"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "Int32"
										},
										"sink": {
											"path": "$['LastModifiedDate']"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "String"
										},
										"sink": {
											"path": "$['BatchId']"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "Guid"
										},
										"sink": {
											"path": "$['id']"
										}
									},
									{
										"source": {
											"name": "ETag",
											"type": "String"
										},
										"sink": {
											"path": "$['ETag']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "hcp_data_sql_ds",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "hcp_data_cosmos_ds",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "usp_update_status_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_sql_cosmos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_Update_SucessObjectStatus]",
							"storedProcedureParameters": {
								"id": {
									"value": null,
									"type": "Guid"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('capita_hcpdata_db')]",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/hcp_data_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/hcp_data_cosmos_ds')]",
				"[concat(variables('factoryId'), '/datasets/hcp_data_download_avro_ds')]",
				"[concat(variables('factoryId'), '/datasets/azure_data_upload_avro_stage_ds')]",
				"[concat(variables('factoryId'), '/datasets/azure_data_upload_avro_ds')]",
				"[concat(variables('factoryId'), '/datasets/azure_data_upload_avro_stage_metadata_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hcp_data_cosmos_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('capita_hcpcosmos_db')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"typeProperties": {
					"collectionName": "metadata"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hcp_data_download_avro_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('hcp_data_download_http_ls')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeURL",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_data_upload_avro_stage_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('azure_data_upload_avro_stage_ls')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().relativeURL",
							"type": "Expression"
						},
						"container": "hcpstage"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_data_upload_avro_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('azure_data_upload_ls')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().relativeURL",
							"type": "Expression"
						},
						"container": "evidential"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_data_upload_avro_stage_metadata_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('azure_data_upload_avro_stage_metadata_ls')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().relativePath",
							"type": "Expression"
						},
						"container": "hcpstage"
					}
				}
			},
			"dependsOn": []
		}
	]
}