{
	"name": "processor_pipe",
	"properties": {
		"activities": [
			{
				"name": "get_objects_to_process_lkup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[USP_Get_ObjectsToProcess]",
						"storedProcedureParameters": {
							"baseURL": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.baseURL",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "azsql_csv_sql_ds",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "foreach_object",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get_objects_to_process_lkup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get_objects_to_process_lkup').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "download_object",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AvroSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET",
										"additionalHeaders": "Authorization: HCP ZGF0YWFjY2Vzc3VzZXIwMQ==:2b1130feb9e66aed8403dea732c16492",
										"requestTimeout": ""
									}
								},
								"sink": {
									"type": "AvroSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "AvroWriteSettings",
										"quoteAllText": true
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "hcp_object_download_ds",
									"type": "DatasetReference",
									"parameters": {
										"relativeURL": {
											"value": "@item().ObjectPath",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "az_object_upload_stg_ds",
									"type": "DatasetReference",
									"parameters": {
										"relativeURL": {
											"value": "@item().ObjectPath",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "update_status_objectstaged",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "download_object",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_UpdateHcpData_Status]",
								"storedProcedureParameters": {
									"id": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"status": {
										"value": "ObjectDownloaded",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "az_sql_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "uploadobject",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "update_status_objectstaged",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AvroSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									}
								},
								"sink": {
									"type": "AvroSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "AvroWriteSettings",
										"quoteAllText": true
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "az_object_upload_stg_ds",
									"type": "DatasetReference",
									"parameters": {
										"relativeURL": "@item().ObjectPath"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "az_object_upload_prod_ds",
									"type": "DatasetReference",
									"parameters": {
										"relativeURL": "@item().ObjectPath"
									}
								}
							]
						},
						{
							"name": "update_status_objectloaded",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "uploadobject",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_UpdateHcpData_Status]",
								"storedProcedureParameters": {
									"id": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"status": {
										"value": "ObjectLoaded",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "az_sql_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "check_custommetadata_exists",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "update_status_objectloaded",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().CustomMetadataExists,'True'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "download_metadata_object",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AvroSource",
												"storeSettings": {
													"type": "HttpReadSettings",
													"requestMethod": "GET",
													"additionalHeaders": "Authorization: HCP ZGF0YWFjY2Vzc3VzZXIwMQ==:2b1130feb9e66aed8403dea732c16492",
													"requestTimeout": ""
												}
											},
											"sink": {
												"type": "AvroSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "AvroWriteSettings",
													"quoteAllText": true
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "hcp_metadata_download_ls",
												"type": "DatasetReference",
												"parameters": {
													"relativeURL": {
														"value": "@concat(item().ObjectPath,'?type=custom-metadata&annotation=',item().CustomMetadataAnnotation)",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "az_object_upload_stg_ds",
												"type": "DatasetReference",
												"parameters": {
													"relativeURL": "@concat('metadata/',item().ObjectPath,'.txt')"
												}
											}
										]
									},
									{
										"name": "update_status_metadata_downloaded",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "download_metadata_object",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[USP_UpdateHcpData_Status]",
											"storedProcedureParameters": {
												"id": {
													"value": {
														"value": "@item().Id",
														"type": "Expression"
													},
													"type": "Guid"
												},
												"status": {
													"value": "Metadata Downloaded",
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "az_sql_ls",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "update_error_download_metadata",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "download_metadata_object",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[USP_Insert_ErrorInformation]",
											"storedProcedureParameters": {
												"errorAtStage": {
													"value": "download metadata object",
													"type": "String"
												},
												"errorInPipeline": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"errorMessage": {
													"value": {
														"value": "@activity('download_metadata_object').error.message",
														"type": "Expression"
													},
													"type": "String"
												},
												"referenceId": {
													"value": {
														"value": "@item().id",
														"type": "Expression"
													},
													"type": "Guid"
												},
												"referenceTable": {
													"value": {
														"value": "@pipeline().parameters.referencetable",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "az_sql_ls",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "fill_object_properties",
							"type": "AzureFunctionActivity",
							"dependsOn": [
								{
									"activity": "check_custommetadata_exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "hcpmetadataupdate",
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"body": {
									"value": "@concat('{\n\"filepath\": \"',pipeline().parameters.azurecontainer,'/',item().ObjectPath,'\",\n\"customMetadataExists\":\"',item().CustomMetadataExists,'\"\n}')",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "az_func_update_objectprops",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update_status_integritycheck",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "fill_object_properties",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_UpdateHcpData_Status]",
								"storedProcedureParameters": {
									"id": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"status": {
										"value": "IntegrityCheckInProgress",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "az_sql_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update_metadata_and_integrity_check",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "update_status_integritycheck",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_Update_Metadata]",
								"storedProcedureParameters": {
									"azureHash": {
										"value": {
											"value": "@activity('fill_object_properties').output.sha256",
											"type": "Expression"
										},
										"type": "String"
									},
									"customMetadata": {
										"value": {
											"value": "@activity('fill_object_properties').output.customMetadata",
											"type": "Expression"
										},
										"type": "String"
									},
									"eTag": {
										"value": {
											"value": "@activity('fill_object_properties').output.eTag",
											"type": "Expression"
										},
										"type": "String"
									},
									"id": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"MD5": {
										"value": {
											"value": "@activity('fill_object_properties').output.contentMD5",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "az_sql_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update_error_download_object",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "download_object",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_Insert_ErrorInformation]",
								"storedProcedureParameters": {
									"errorAtStage": {
										"value": "download object",
										"type": "String"
									},
									"errorInPipeline": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"errorMessage": {
										"value": {
											"value": "@activity('download_object').error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"referenceId": {
										"value": {
											"value": "@item().id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"referenceTable": {
										"value": {
											"value": "@pipeline().parameters.referencetable",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "az_sql_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update_error_upload_object",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "uploadobject",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_Insert_ErrorInformation]",
								"storedProcedureParameters": {
									"errorAtStage": {
										"value": "upload object",
										"type": "String"
									},
									"errorInPipeline": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"errorMessage": {
										"value": {
											"value": "@activity('uploadobject').error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"referenceId": {
										"value": {
											"value": "@item().id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"referenceTable": {
										"value": {
											"value": "@pipeline().parameters.referencetable",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "az_sql_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update_error_fill_object_props",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "fill_object_properties",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[USP_Insert_ErrorInformation]",
								"storedProcedureParameters": {
									"errorAtStage": {
										"value": "fill object properties",
										"type": "String"
									},
									"errorInPipeline": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"errorMessage": {
										"value": {
											"value": "@activity('fill_object_properties').error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"referenceId": {
										"value": {
											"value": "@item().id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"referenceTable": {
										"value": {
											"value": "@pipeline().parameters.referencetable",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "az_sql_ls",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "copy_data_to_cosmos",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "foreach_object",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[USP_Get_ObjectsToBeProcessedForCosmos]",
						"storedProcedureParameters": {
							"application": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.azurecontainer",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "CosmosDbSqlApiSink",
						"writeBehavior": "insert"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ID",
									"type": "Guid"
								},
								"sink": {
									"path": "$['id']"
								}
							},
							{
								"source": {
									"name": "Application",
									"type": "String"
								},
								"sink": {
									"path": "$['application']"
								}
							},
							{
								"source": {
									"name": "FilePath",
									"type": "String"
								},
								"sink": {
									"path": "$['FilePath']"
								}
							},
							{
								"source": {
									"name": "SnapshotPath",
									"type": "String"
								},
								"sink": {
									"path": "$['SnapshotPath']"
								}
							},
							{
								"source": {
									"name": "IsSnapshot",
									"type": "Boolean"
								},
								"sink": {
									"path": "$['IsSnapshot']"
								}
							},
							{
								"source": {
									"name": "Version",
									"type": "Int64"
								},
								"sink": {
									"path": "$['Version']"
								}
							},
							{
								"source": {
									"name": "Hold",
									"type": "Boolean"
								},
								"sink": {
									"path": "$['SystemMetadata']['Hold']"
								}
							},
							{
								"source": {
									"name": "Index",
									"type": "Boolean"
								},
								"sink": {
									"path": "$['SystemMetadata']['Index']"
								}
							},
							{
								"source": {
									"name": "Shred",
									"type": "Boolean"
								},
								"sink": {
									"path": "$['SystemMetadata']['Shred']"
								}
							},
							{
								"source": {
									"name": "Retention",
									"type": "Int64"
								},
								"sink": {
									"path": "$['SystemMetadata']['Retention']"
								}
							},
							{
								"source": {
									"name": "CustomMetadata",
									"type": "String"
								},
								"sink": {
									"path": "$['CustomMetadata']"
								}
							},
							{
								"source": {
									"name": "DocumentSize",
									"type": "Int32"
								},
								"sink": {
									"path": "$['DocumentSize']"
								}
							},
							{
								"source": {
									"name": "LastModifiedDate",
									"type": "Int32"
								},
								"sink": {
									"path": "$['LastModifiedDate']"
								}
							},
							{
								"source": {
									"name": "Status",
									"type": "String"
								},
								"sink": {
									"path": "$['Status']"
								}
							},
							{
								"source": {
									"name": "QueueRequestType",
									"type": "String"
								},
								"sink": {
									"path": "$['QueueRequestType']"
								}
							},
							{
								"source": {
									"name": "ContentMD5",
									"type": "String"
								},
								"sink": {
									"path": "$['ContentMD5']"
								}
							},
							{
								"source": {
									"name": "LeaseId",
									"type": "String"
								},
								"sink": {
									"path": "$['LeaseId']"
								}
							},
							{
								"source": {
									"name": "CreatedDate",
									"type": "Int32"
								},
								"sink": {
									"path": "$['CreatedDate']"
								}
							},
							{
								"source": {
									"name": "ETag",
									"type": "String"
								},
								"sink": {
									"path": "$['ETag']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "az_sql_hcp_data",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "az_metadata_cosmos_ds",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "update_error_copy_data_to_cosmos",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "copy_data_to_cosmos",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[USP_Insert_ErrorInformation]",
					"storedProcedureParameters": {
						"errorAtStage": {
							"value": "download object",
							"type": "String"
						},
						"errorInPipeline": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"errorMessage": {
							"value": {
								"value": "@activity('copy_data_to_cosmos').error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"referenceId": {
							"type": "Guid"
						},
						"referenceTable": {
							"value": {
								"value": "@pipeline().parameters.referencetable",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "az_sql_ls",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "save_status_of_processor",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "copy_data_to_cosmos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[USP_UpdateProcessor_Pipe_Status]"
				},
				"linkedServiceName": {
					"referenceName": "az_sql_ls",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"baseURL": {
				"type": "string",
				"defaultValue": "https://ns01.tenant01.coe-hcp01.hitachivantara.com/rest/"
			},
			"azurecontainer": {
				"type": "string",
				"defaultValue": "evidential"
			},
			"azurestagecontainer": {
				"type": "string",
				"defaultValue": "hcpstage"
			},
			"referencetable": {
				"type": "string",
				"defaultValue": "tblhcpdata"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}